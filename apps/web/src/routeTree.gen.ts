/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as authenticatedRouteRouteImport } from './routes/(authenticated)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as authenticatedHelpCenterRouteImport } from './routes/(authenticated)/help-center'
import { Route as authenticatedDashboardRouteImport } from './routes/(authenticated)/dashboard'
import { Route as authenticatedApiKeysRouteImport } from './routes/(authenticated)/api-keys'
import { Route as authenticatedSettingsRouteRouteImport } from './routes/(authenticated)/settings/route'
import { Route as authenticatedSettingsAccountRouteImport } from './routes/(authenticated)/settings/account'

const authenticatedRouteRoute = authenticatedRouteRouteImport.update({
  id: '/(authenticated)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const authenticatedHelpCenterRoute = authenticatedHelpCenterRouteImport.update({
  id: '/help-center',
  path: '/help-center',
  getParentRoute: () => authenticatedRouteRoute,
} as any)
const authenticatedDashboardRoute = authenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => authenticatedRouteRoute,
} as any)
const authenticatedApiKeysRoute = authenticatedApiKeysRouteImport.update({
  id: '/api-keys',
  path: '/api-keys',
  getParentRoute: () => authenticatedRouteRoute,
} as any)
const authenticatedSettingsRouteRoute =
  authenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedSettingsAccountRoute =
  authenticatedSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => authenticatedSettingsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof authenticatedRouteRouteWithChildren
  '/settings': typeof authenticatedSettingsRouteRouteWithChildren
  '/api-keys': typeof authenticatedApiKeysRoute
  '/dashboard': typeof authenticatedDashboardRoute
  '/help-center': typeof authenticatedHelpCenterRoute
  '/auth/login': typeof AuthLoginRoute
  '/settings/account': typeof authenticatedSettingsAccountRoute
}
export interface FileRoutesByTo {
  '/': typeof authenticatedRouteRouteWithChildren
  '/settings': typeof authenticatedSettingsRouteRouteWithChildren
  '/api-keys': typeof authenticatedApiKeysRoute
  '/dashboard': typeof authenticatedDashboardRoute
  '/help-center': typeof authenticatedHelpCenterRoute
  '/auth/login': typeof AuthLoginRoute
  '/settings/account': typeof authenticatedSettingsAccountRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(authenticated)': typeof authenticatedRouteRouteWithChildren
  '/(authenticated)/settings': typeof authenticatedSettingsRouteRouteWithChildren
  '/(authenticated)/api-keys': typeof authenticatedApiKeysRoute
  '/(authenticated)/dashboard': typeof authenticatedDashboardRoute
  '/(authenticated)/help-center': typeof authenticatedHelpCenterRoute
  '/auth/login': typeof AuthLoginRoute
  '/(authenticated)/settings/account': typeof authenticatedSettingsAccountRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/settings'
    | '/api-keys'
    | '/dashboard'
    | '/help-center'
    | '/auth/login'
    | '/settings/account'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/settings'
    | '/api-keys'
    | '/dashboard'
    | '/help-center'
    | '/auth/login'
    | '/settings/account'
  id:
    | '__root__'
    | '/'
    | '/(authenticated)'
    | '/(authenticated)/settings'
    | '/(authenticated)/api-keys'
    | '/(authenticated)/dashboard'
    | '/(authenticated)/help-center'
    | '/auth/login'
    | '/(authenticated)/settings/account'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authenticatedRouteRoute: typeof authenticatedRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(authenticated)': {
      id: '/(authenticated)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)/help-center': {
      id: '/(authenticated)/help-center'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof authenticatedHelpCenterRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/dashboard': {
      id: '/(authenticated)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authenticatedDashboardRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/api-keys': {
      id: '/(authenticated)/api-keys'
      path: '/api-keys'
      fullPath: '/api-keys'
      preLoaderRoute: typeof authenticatedApiKeysRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/settings': {
      id: '/(authenticated)/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof authenticatedSettingsRouteRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/settings/account': {
      id: '/(authenticated)/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof authenticatedSettingsAccountRouteImport
      parentRoute: typeof authenticatedSettingsRouteRoute
    }
  }
}

interface authenticatedSettingsRouteRouteChildren {
  authenticatedSettingsAccountRoute: typeof authenticatedSettingsAccountRoute
}

const authenticatedSettingsRouteRouteChildren: authenticatedSettingsRouteRouteChildren =
  {
    authenticatedSettingsAccountRoute: authenticatedSettingsAccountRoute,
  }

const authenticatedSettingsRouteRouteWithChildren =
  authenticatedSettingsRouteRoute._addFileChildren(
    authenticatedSettingsRouteRouteChildren,
  )

interface authenticatedRouteRouteChildren {
  authenticatedSettingsRouteRoute: typeof authenticatedSettingsRouteRouteWithChildren
  authenticatedApiKeysRoute: typeof authenticatedApiKeysRoute
  authenticatedDashboardRoute: typeof authenticatedDashboardRoute
  authenticatedHelpCenterRoute: typeof authenticatedHelpCenterRoute
}

const authenticatedRouteRouteChildren: authenticatedRouteRouteChildren = {
  authenticatedSettingsRouteRoute: authenticatedSettingsRouteRouteWithChildren,
  authenticatedApiKeysRoute: authenticatedApiKeysRoute,
  authenticatedDashboardRoute: authenticatedDashboardRoute,
  authenticatedHelpCenterRoute: authenticatedHelpCenterRoute,
}

const authenticatedRouteRouteWithChildren =
  authenticatedRouteRoute._addFileChildren(authenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authenticatedRouteRoute: authenticatedRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
